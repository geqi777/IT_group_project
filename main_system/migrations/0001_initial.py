# Generated by Django 5.1.2 on 2024-11-05 17:30

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('min_order_value', models.FloatField(default=0)),
                ('max_activations', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('supports_repair', models.BooleanField(default=False)),
                ('supports_charging', models.BooleanField(default=False)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('capacity', models.PositiveIntegerField(default=50)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('date_of_birth', models.DateField(default=datetime.date.today)),
                ('gender', models.IntegerField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Other'), (4, "Don't want to say"), (5, 'Unknown')], default=5)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('account', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('account_balance', models.FloatField(default=0.0)),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_verified', models.BooleanField(default=False)),
                ('trip_points', models.IntegerField(default=0)),
                ('driver_license', models.ImageField(blank=True, null=True, upload_to='customer/license/')),
                ('coupons', models.ManyToManyField(blank=True, to='main_system.coupon')),
            ],
        ),
        migrations.AddField(
            model_name='coupon',
            name='activated_users',
            field=models.ManyToManyField(blank=True, related_name='activated_coupons', to='main_system.customer'),
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=16, unique=True)),
                ('expiry_date', models.CharField(max_length=5)),
                ('cvv', models.CharField(max_length=4)),
                ('nickname', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(max_length=50)),
                ('postcode', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='main_system.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField(default=datetime.date.today)),
                ('gender', models.IntegerField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Other'), (4, "Don't want to say"), (5, 'Unknown')], default=5)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('account', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('is_employee', models.BooleanField(default=False)),
                ('role', models.CharField(max_length=50)),
                ('join_time', models.DateField(default=datetime.date.today)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_system.department')),
            ],
        ),
        migrations.CreateModel(
            name='TopupHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topup_histories', to='main_system.card')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topup_histories', to='main_system.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('power', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('price', models.IntegerField(default=0)),
                ('situation', models.CharField(choices=[('very_poor', 'Very Poor'), ('poor', 'Poor'), ('average', 'Average'), ('good', 'Good'), ('excellent', 'Excellent')], max_length=50)),
                ('vehicle_type', models.CharField(choices=[('electric_car', 'Electric Car'), ('scooter', 'Scooter'), ('e_bike', 'E-bike')], max_length=50)),
                ('vehicle_number', models.CharField(max_length=50, unique=True)),
                ('is_available', models.BooleanField(default=True)),
                ('rental_time', models.DateTimeField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('luggage', models.IntegerField(blank=True, default=1, null=True)),
                ('capacity', models.IntegerField(blank=True, default=1, null=True)),
                ('marks', models.IntegerField(default=5)),
                ('needs_charging', models.BooleanField(default=False)),
                ('needs_repair', models.BooleanField(default=False)),
                ('damaged_part', models.TextField(blank=True, default='')),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_system.customer')),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('start_location_name', models.CharField(max_length=255)),
                ('start_location_latitude', models.FloatField()),
                ('start_location_longitude', models.FloatField()),
                ('end_location_name', models.CharField(blank=True, max_length=255, null=True)),
                ('end_location_latitude', models.FloatField(blank=True, null=True)),
                ('end_location_longitude', models.FloatField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('distance', models.CharField(blank=True, default='0 km', max_length=20)),
                ('status', models.CharField(choices=[('ongoing', 'Ongoing'), ('completed', 'Completed')], default='ongoing', max_length=10)),
                ('rating', models.PositiveSmallIntegerField(default=5)),
                ('review', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='main_system.customer')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='main_system.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_system.history')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_system.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='WalletHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('top_up', 'Top Up'), ('payment', 'Payment'), ('points_increase', 'Points Increase'), ('points_exchange', 'Points Exchange'), ('coupon_addition', 'Coupon Addition'), ('coupon_deduction', 'Coupon Deduction'), ('coupon_expired', 'Coupon Expired')], max_length=20)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('trip_points', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallet_usages', to='main_system.coupon')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_history', to='main_system.customer')),
                ('top_up', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallet_transactions', to='main_system.topuphistory')),
            ],
        ),
    ]
